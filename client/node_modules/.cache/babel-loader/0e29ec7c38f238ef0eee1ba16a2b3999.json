{"ast":null,"code":"import _classCallCheck from \"/Users/EasonChang/counter-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/EasonChang/counter-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/EasonChang/counter-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/EasonChang/counter-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/EasonChang/counter-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/EasonChang/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, this.formatCount()), React.createElement(\"button\", {\n        className: \"btn btn-secondary btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Increment\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"getBadgeClasses\",\n    value: function getBadgeClasses() {\n      var classes = \"badge m-2 badge-\";\n\n      if (this.state.count === 0) {\n        classes += \"warning\";\n      } else {\n        classes += \"primary\";\n      }\n\n      return classes;\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/EasonChang/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","getBadgeClasses","formatCount","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,O;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFF,K;;;;;;6BAKC;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKC,WAAL,EAA1C,CADJ,EAEI;AAAQ,QAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAHJ,CADJ;AASH;;;sCAEiB;AACd,UAAIC,OAAO,GAAG,kBAAd;;AACA,UAAI,KAAKL,KAAL,CAAWC,KAAX,KAAqB,CAAzB,EAA4B;AACxBI,QAAAA,OAAO,IAAI,SAAX;AACH,OAFD,MAGK;AACDA,QAAAA,OAAO,IAAI,SAAX;AACH;;AACD,aAAOA,OAAP;AACH;;;kCAEa;AAAA,UACFJ,KADE,GACQ,KAAKD,KADb,CACFC,KADE;AAEV,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;;;EAjCiBH,S;;AAqCtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Counter extends Component {\n    state = {\n        count: 0,\n        tags: ['tag1', 'tag2', 'tag3']\n    };\n\n    render() { \n        \n        return (\n            <div>\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button className=\"btn btn-secondary btn-sm\">Increment</button>\n                <ul>\n                    <li></li>\n                </ul>\n            </div>\n        );\n    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        if (this.state.count === 0) {\n            classes += \"warning\";\n        }\n        else {\n            classes += \"primary\";\n        }\n        return classes;\n    }\n\n    formatCount() {\n        const { count } = this.state;\n        return count === 0 ? \"Zero\" : count;\n    }\n\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}